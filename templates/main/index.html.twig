{% extends 'base.html.twig' %}

{% block title %}Hello MainController!
{% endblock %}
{% block body %}
	<style>
		h5 {
			color: var(--lighter-purple-color);
		}
		.dot-status {
			width: 15px;
			height: 15px;
			border-radius: 50%;
			display: inline-block;
			margin-right: 10px;
			background-color: var(--new-ticket-color);
		}
		.main-section {
			border: none;
			border-radius: 4px;
		}
		.search-bar {
			border-radius: 4px;
			border: 1px solid #E7E7E7;
			background: #FBFBFB;
		}
		.choice-list {
			padding: 14px 13px 11px 18px;
			border-radius: 4px;
			border: 1px solid #E7E7E7;
		}
		.filter-buttons .btn {
			margin-right: 0.5rem;
		}
		.active-btn {
			color: var(--lighter-purple-color);
			border-bottom: 2px solid var(--lighter-purple-color);
			font-weight: bold;
		}
		.active-status {
			cursor: not-allowed;
			pointer-events: none;

		}
		active-status:hover {
			cursor: not-allowed;
			pointer-events: none;
		}
		@media(max-width: 768px) {
			.search-and-filters {
				flex-direction: column;
			}

			.filter-buttons .btn.active-status {
				display: none;
			}

			.form-inline {
				width: 100%;
				margin-bottom: 1rem;
			}

			.choice-list,
			.btn-first {
				width: 100%;
				margin-bottom: 1rem;
			}
		}
	</style>

	<div class="container-fluid">
		<h1 class="page-title">Page d'accueil</h1>
		<div class="card bg-white main-section">
			<div class="card-body">
				<div
					class="search-and-filters d-flex justify-content-between align-items-center mb-3">
					{# SEARCH BAR #}
					<form class="form-inline my-2 my-lg-0 d-flex flex-row">
						<input class="form-control mr-sm-2 search-bar" type="search" placeholder="Rechercher un ticket" aria-label="Search">
					</form>

					<div>
						{# STATUS FILTER #}
						<select class="custom-select mr-2 choice-list" onchange="updateActiveStatus(this)">
							<option selected value="">Tous</option>
							{% for statu in status %}
								<option value="{{ statu.slug }}">{{ statu.label }}</option>
							{% endfor %}
						</select>
						{# DATE FILTER #}
						<select class="custom-select choice-list" onchange="filterByDate(this)">
							<option value="all">Tous</option>
							<option value="today">Aujourd'hui</option>
							<option value="week">Cette semaine</option>
							<option value="month">Ce mois</option>
						</select>
						<button class="btn btn-first">Nouveau ticket</button>
					</div>
				</div>

				{# ACTIVE STATUS #}
				<div class="border-bottom mb-4">
					<div class="filter-buttons btn-group" role="group" aria-label="Basic example">
						<button type="button" class="btn active-btn active-status" data-status="">Tous</button>
						{% for statu in status %}
							<button type="button" class="btn active-status" data-status="{{ statu.slug }}">{{ statu.label }}</button>
						{% endfor %}
					</div>
				</div>
				{# TICKET #}
				{% for ticket in tickets %}
					{% include 'components/ticket_card.html.twig' with {'ticket': ticket} %}
				{% endfor %}

				{# PAGE #}
				{# <nav aria-label="Page navigation example">
																					<ul class="pagination justify-content-center">
																						<li class="page-item disabled">
																							<a class="page-link" href="#" tabindex="-1" aria-disabled="true">Précédent</a>
																						</li>
																						<li class="page-item">
																							<a class="page-link" href="#">1</a>
																						</li>
																						<li class="page-item">
																							<a class="page-link" href="#">2</a>
																						</li>
																						<li class="page-item">
																							<a class="page-link" href="#">Suivant</a>
																						</li>
																					</ul>
																				</nav> #}
			</div>
		</div>
	</div>
</div>
<script>
	// Filter tickets by status
function updateActiveStatus(selectElement) {
var selectedStatus = selectElement.value;

// Update active status
var buttons = document.querySelectorAll('.filter-buttons .btn');
buttons.forEach(function (button) {
if (button.dataset.status === selectedStatus) {
button.classList.add('active-btn');
} else {
button.classList.remove('active-btn');
}
});

// Filter tickets
var tickets = document.querySelectorAll('.ticket-item');
tickets.forEach(function (ticket) {
if (selectedStatus === '' || ticket.classList.contains(selectedStatus)) {
ticket.style.display = '';
} else {
ticket.style.display = 'none';
}
});
}
// Filter tickets by date
function filterByDate(selectElement) {
var selectedPeriod = selectElement.value;
var now = new Date();
var tickets = document.querySelectorAll('.ticket-item');

tickets.forEach(function (ticket) {
var createdAt = new Date(ticket.getAttribute('data-created-at'));
var display = false;

switch (selectedPeriod) {
case 'today': display = createdAt.toDateString() === now.toDateString();
break;
case 'week':
var startOfWeek = new Date(now.setDate(now.getDate() - now.getDay()));
display = createdAt >= startOfWeek;
break;
case 'month': display = createdAt.getMonth() === now.getMonth() && createdAt.getFullYear() === now.getFullYear();
break;
case 'all':
default: display = true;
break;
}

ticket.style.display = display ? '' : 'none';
});
}
// Live search
function liveSearch() {
var searchInput = document.querySelector('.search-bar').value.toLowerCase();
var tickets = document.querySelectorAll('.ticket-item');

tickets.forEach(function (ticket) {
var title = ticket.querySelector('h5').textContent.toLowerCase();
var description = ticket.querySelector('p').textContent.toLowerCase();

if (title.includes(searchInput) || description.includes(searchInput)) {
ticket.style.display = '';
} else {
ticket.style.display = 'none';
}
});
}

// addEventListener to search bar
document.querySelector('.search-bar').addEventListener('input', liveSearch);

// Prevent form submission on enter
document.querySelector('.search-bar').addEventListener('keypress', function (e) {
if (e.key === 'Enter') {
e.preventDefault();
}
});
</script>{% endblock %}
